plugins {
    id 'java'
    id 'jacoco'
    id 'com.adarshr.test-logger' version '4.0.0'
    id 'maven-publish'
    id 'signing'
}

group = 'nl.bvkatwijk.java-lens'
version = '0.5.0'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    testAnnotationProcessor libs.lombok
    testImplementation libs.lombok

    implementation libs.vavr

    testImplementation platform(libs.junit.bom)
    testImplementation libs.junit.jupiter.api
    testImplementation libs.junit.jupiter.engine
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testImplementation group: 'com.google.testing.compile', name: 'compile-testing', version: '0.21.0'
    testImplementation group: 'com.approvaltests', name: 'approvaltests', version: '24.19.0'
    testImplementation 'org.instancio:instancio-junit:5.4.1'
    testAnnotationProcessor project(":lens")
}

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}


tasks.named('test') {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
}


jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = false
    }
}

testlogger {
    slowThreshold 500
}

clean { delete += "tmp" }

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

signing {
    sign publishing.publications
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

publishing {
    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'nl.bvkatwijk'
            artifactId = 'java-lens'

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'java-lens'
                description = 'Lens generation for records'
                url = 'https://github.com/bvkatwijk/java-lens/'
                developers {
                    developer {
                        id = 'bvkatwijk'
                        name = 'Boris van Katwijk'
                        email = 'bvkatwijk@gmail.com'
                        organizationUrl = 'https://bvankatwijk.nl/'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/bvkatwijk/java-lens.git'
                    developerConnection = 'scm:git:ssh://github.com/bvkatwijk/java-lens.git'
                    url = 'https://github.com/bvkatwijk/java-lens/'
                }

                license {
                    name = "MIT Licence"
                    url = "http://www.opensource.org/licenses/mit-license.php"
                }

            }
        }
    }
}

tasks.withType(Zip) { task ->
    task.doLast {
        ant.checksum file: it.archivePath
    }
}
