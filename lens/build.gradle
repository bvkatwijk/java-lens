plugins {
    id 'java'
    id 'jacoco'
    id 'com.adarshr.test-logger' version '4.0.0'
    id 'maven-publish'
    id 'org.jreleaser' version '1.14.0'
}

group = 'nl.bvkatwijk.java-lens'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok

    implementation libs.vavr

    testImplementation libs.junit.jupiter
    testImplementation libs.junit.jupiter.api
    testImplementation group: 'com.karuslabs', name: 'elementary', version: '3.0.0'
    testImplementation 'org.instancio:instancio-junit:5.0.2'
    testAnnotationProcessor(project(":lens"))
}

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}


tasks.named('test') {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = false
    }
}

testlogger {
    slowThreshold 500
}

clean { delete += "tmp" }

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    repositories {
        maven {
            def releaseRepo = "https://central.sonatype.com/api/v1/publisher/upload/"
            def snapshotRepo = "https://central.sonatype.com/api/v1/publisher/upload/"

            name = "OSSRH"
            url = isReleaseVersion ? releaseRepo : snapshotRepo

            credentials {
                username = findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = 'nl.bvkatwijk'
            artifactId = 'java-lens'

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'java-lens'
                description = 'Lens generation for records'
                url = 'https://github.com/bvkatwijk/java-lens/'
                developers {
                    developer {
                        id = 'bvkatwijk'
                        name = 'Boris van Katwijk'
                        email = 'bvkatwijk@gmail.com'
                        organizationUrl = 'https://bvankatwijk.nl/'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/bvkatwijk/java-lens.git'
                    developerConnection = 'scm:git:ssh://github.com/bvkatwijk/java-lens.git'
                    url = 'https://github.com/bvkatwijk/java-lens/'
                }
            }
        }
    }
}

jreleaser {
    gitRootSearch = true
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('target/staging-deploy')
                }
            }
        }
    }
}

tasks.withType(Zip) { task ->
    task.doLast {
        ant.checksum file: it.archivePath
    }
}
