plugins {
    id 'java'
    id 'com.adarshr.test-logger' version '4.0.0'
    id 'maven-publish'
}

group = 'nl.bvkatwijk.java-lens'
version = '0.1.0'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    testCompileOnly libs.lombok
    testAnnotationProcessor libs.lombok

    implementation libs.vavr

    testImplementation libs.junit.jupiter
    testImplementation libs.junit.jupiter.api

    testImplementation 'org.instancio:instancio-junit:5.0.2'
    testAnnotationProcessor(project(":lens"))
}

java {
    withJavadocJar()
    withSourcesJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}


tasks.named('test') {
    useJUnitPlatform()
}

testlogger {
    slowThreshold 500
}

clean { delete += "tmp" }

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'nl.bvkatwijk'
            artifactId = 'java-lens'
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            from components.java
            pom {
                name = 'java-lens'
                description = 'Lens generation for records'
                url = 'https://github.com/bvkatwijk/java-lens/'
                developers {
                    developer {
                        id = 'bvkatwijk'
                        name = 'Boris van Katwijk'
                        email = 'bvkatwijk@gmail.com'
                        organizationUrl = 'https://bvankatwijk.nl/'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/bvkatwijk/java-lens.git'
                    developerConnection = 'scm:git:ssh://github.com/bvkatwijk/java-lens.git'
                    url = 'https://github.com/bvkatwijk/java-lens/'
                }
            }
        }
    }
}
